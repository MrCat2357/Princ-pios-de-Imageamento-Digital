# -*- coding: utf-8 -*-
"""Redimensionamento e Histograma.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aZb5LBGX__c9BefspFuGBlI-3NJxfQPZ
"""

# Commented out IPython magic to ensure Python compatibility.
from google.colab.patches import cv2_imshow
import cv2
from PIL import Image
import numpy as np
import matplotlib.pyplot as plt

# %matplotlib inline

img = cv2.imread("/content/hacker.jpg", cv2.IMREAD_GRAYSCALE)

from google.colab import drive
drive.mount('/content/drive')

"""IMAGEM ORIGINAL NA ESCALA DE CINZA"""

plt.imshow(img, cmap = 'gray')

"""DIMENSÕES DA IMAGEM"""



dimensoes = img.shape
# Obtém a altura e largura da imagem
altura, largura = img.shape

# Calcula a quantidade de pixels
quantidade_pixels = altura * largura

print("Quantidade de pixels da imagem:", quantidade_pixels)
print("Dimensões da imagem:", img.shape)

"""REDIMENSIONAMENTO DA IMAGEM"""

# Redimensionando
img_redim = cv2.resize(img, (45, 45), interpolation = cv2.INTER_AREA)

# Exibindo a nova imagem
plt.imshow(img_redim, cmap = 'gray')

"""TRAZENDO A IMAGEM PARA AS DIMENSÕES ORIGINAIS"""

img_final = cv2.resize(img_redim, (825, 550), interpolation = cv2.INTER_AREA)
plt.imshow(img_final, cmap ='gray')

"""GERANDO O HISTOGRAMA"""

print("Histograma da imagem original img")
#Função calcHist para calcular o hisograma da imagem
hist_original = cv2.calcHist([img], [0], None, [256], [0, 256])
plt.figure()
plt.title("Histograma Imagem Original")
plt.xlabel("Intensidade")
plt.ylabel("Qtde de Pixels")
plt.plot(hist_original)
plt.xlim([0, 256])
plt.show()
cv2.waitKey(0)

print("Histograma da imagem final img_final")
#Função calcHist para calcular o hisograma da imagem
hist_final = cv2.calcHist([img_final], [0], None, [256], [0, 256])
plt.figure()
plt.title("Histograma Imagem Pixelada")
plt.xlabel("Intensidade")
plt.ylabel("Qtde de Pixels")
plt.plot(hist_final)
plt.xlim([0, 256])
plt.show()
cv2.waitKey(0)

"""  COMPARANDO OS HISTOGRAMAS"""

plt.plot(hist_original)
plt.plot(hist_final)

"""Quando sobrepomos os histogramas de uma imagem original em tons de cinza e uma versão pixelada da mesma imagem, é esperado que as curvas dos histogramas sejam diferentes. Isso ocorre por causa da mudança na distribuição de intensidade dos pixels após a pixelização.

A pixelização reduz a resolução da imagem, ou seja, aumenta o tamanho dos pixels, o que pode resultar em uma perda de detalhes e em uma representação menos precisa da imagem. Isso afeta diretamente a distribuição de intensidade dos pixels na imagem.

Ao pixelizar uma imagem, estamos agrupando vários pixels originais em um único pixel da nova imagem. Isso significa que a intensidade de cor de cada novo pixel pixelizado é uma média ou uma função dos pixels originais que foram agrupados. Isso leva a uma suavização das transições de cor e a uma redução na variação da intensidade dos pixels, o que resulta em um histograma diferente do histograma da imagem original.

HISTOGRAMA DA IMAGEM COLORIDA
"""

img = cv2.imread("/content/hacker.jpg")
plt.imshow(img)
# Separa os canais de cores da imagem
canal_azul, canal_verde, canal_vermelho = cv2.split(img)

# Calcula o histograma para cada canal de cor
histograma_azul = cv2.calcHist([canal_azul], [0], None, [256], [0, 256])
histograma_verde = cv2.calcHist([canal_verde], [0], None, [256], [0, 256])
histograma_vermelho = cv2.calcHist([canal_vermelho], [0], None, [256], [0, 256])

# Plota o histograma
plt.figure(figsize=(10, 6))
plt.plot(histograma_azul, color='blue', label='Canal Azul')
plt.plot(histograma_verde, color='green', label='Canal Verde')
plt.plot(histograma_vermelho, color='red', label='Canal Vermelho')
plt.xlabel('Intensidade')
plt.ylabel('Frequência')
plt.title('Histograma das Cores RGB')
plt.legend()
plt.grid(True)
plt.show()